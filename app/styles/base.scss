$animTimeCirc: 0.7s;
$animTimeLine: 0.3s;
$animTime: $animTimeCirc + $animTimeLine;

* {
  box-sizing: border-box;
}

body {
  margin:      0;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  background:  #999;
}

a {
  color: inherit;
}

.unsupported {
  display:         flex;
  flex-direction:  column;
  justify-content: center;
  align-items:     center;

  height:          100vh;
}

.radar {
  display: flex;
  height:  100vh;
}

.radar__chart {
  flex:            2;

  padding:         45px;
  background:      url('../images/tm.svg') center center no-repeat;
  background-size: 60px;
}

.radar__nav {
  flex-basis: 22.5%;

  overflow-y: scroll;
  background: #333;
}

%proto-anim {
  animation: dash $animTimeCirc linear forwards;
}

.proto {
  stroke:       #666;
  stroke-width: 0.5;
  fill:         transparent;
}

.proto--horizon {
  $pi: 3.141592653589793;
  $radius: 300;
  $horizons: 5;
  $horizonWidth: $radius/$horizons;

  @extend %proto-anim;

  transform: rotate(-90deg);

  @for $i from 1 through $horizons {
    $diameter: (($radius + $horizonWidth) - ($i * $horizonWidth)) * 2;
    $circumference: $pi * $diameter;

    &:nth-child(#{$i}) {
      stroke-dasharray:  $circumference;
      stroke-dashoffset: $circumference;
    }
  }
}

.proto--line {
  @extend %proto-anim;

  stroke-dasharray:          400;
  stroke-dashoffset:         400;
  animation-delay:           $animTimeCirc;
  animation-duration:        $animTimeLine;
  animation-timing-function: ease-out;
}

@keyframes dash {
  to {
    stroke-dashoffset: 0;
  }
}

@keyframes fadeup {
  to {
    opacity: 1;
  }
}
